% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uniPeak.R
\name{uniPeak}
\alias{uniPeak}
\alias{unipeak}
\title{[!] Keep only the highest positive peak of a curve.

Keep only the highest positive peak}
\usage{
uniPeak(y)

unipeak(y)
}
\arguments{
\item{y}{A vector}
}
\value{
Modified \code{y}
}
\examples{
#  Example 1 ------------------------------------------------------------------------

x     <- seq(-10,20,.1)
y0    <- GaussAmp(x,xc=0, A=1) + GaussAmp(x,xc=10, A=2) -.5
y0NEW <- uniPeak(y0)

# Plot the results
par(mfrow = c(1,1))
plot( x, y0,    type = "l", lty = 3,
        main = "'uniPeak' keeps positive part \\n of highest peak only" );
lines(x, y0NEW, type = "l", lty = 1, lwd = 3);
legend("topleft", legend = c("Before","After"), lty = c(3,1))


#  Example 2 ------------------------------------------------------------------------

x  = seq(-10,20,.1)
y1 = (sin(x/4) + GaussAmp(x))
y2 = (2*sin(x) + sin(x/5) + GaussAmp(x, xc = 5))
y  = rbind(y1,y2)

yNEW <- apply(y,1,uniPeak)

par(mfrow = c(3,1))

# plot 1
matplot(x, t(y), type = "l", lty = 3,
        main = "A - Initial curves");
abline(h=0)

# plot 2
matplot(x,yNEW, type = "l", lty = 1,lwd = 3,
        main = "B - Only the highest positive\\n peaks per curve");
abline(h=0)

# plot 3: both plots together
matplot(x, t(y), type = "l", lty = 3, main = "A and B together");
matlines(x,yNEW, type = "l", lty = 1,lwd = 3);
abline(h=0)

}

