% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sortLoadings.R
\name{sortLoadings}
\alias{sortLoadings}
\title{[!] Sort component spectra (a.k.a. loadings) by possition of top peak}
\usage{
sortLoadings(loadings, sp = NULL, PCA = FALSE, sort = TRUE)
}
\arguments{
\item{loadings}{Components' spectra (loadings) as either a matrix or a
\code{\link[=hyperSpec-class]{hyperSpec}} object.}

\item{sp}{Spectroscopic data
(either a \code{\link[=hyperSpec-class]{hyperSpec}} object or a matrix).}

\item{PCA}{logical. If \code{TRUE}, some components are flipped. ... Set to TRUE
if PCA loadings are used. Default \code{PCA = FALSE}}

\item{sort}{- logical. Indicates if returned componenst must be sorted.
If \code{FALSE}, only additional tasks are performed.
Default is \code{TRUE}.}
}
\value{
Either matrix (if \code{sp} is not provided) or
\code{hyperSpec} object with sorted loadings.
In case of \code{hyperSpec} object, 3 additional columns
(PeakAt, order.of.rows, kNames) are added.
}
\description{
[!] = [INCOMPLETE DESCRIPTION] \cr

 Sort component spectra (a.k.a. loadings) by
 possition of top peak and do additional tasks:
 \enumerate{
     \item{If \code{sp} is provided, convert resulting matrix to corresponding
         \code{\link[=hyperSpec-class]{hyperSpec}} object by using function
         \code{\link[hyperSpec]{decomposition}}.}
     \item{If \code{PCA = TRUE} and \code{sp} is provided, flips component's spectrum
         if mean of its scores is negative: (\code{sign(mean(Scores_of_component_i)) < 0})
         \code{loadings} and \code{sp} are used to calculate the scores.}
 }
}
\note{
spectra (object of class \code{\link[=hyperSpec-class]{hyperSpec}})
         which will be used to convert sorted loadings into
         \code{\link[=hyperSpec-class]{hyperSpec}} object.
}
\examples{

sortLoadings(loadings)        # returns a matrix

sortLoadings(loadings,sp)     # returns a hyperSpec object


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Komponentų amplitudes (išrikiuotas) paverčiam į "HyperSpec"" objektą
scores <- decomposition(Object, t(coef(NMF_data))[,OrderOfRows],
                           label.wavelength = "Komponentai",
                           label.spc        = "Amplitudė, a.u.")
colnames(scores$spc) <- paste0("k_", PeakAt)
======================================================================

# Print names of components
tbl_virsunes <- data.frame(Nr = 1:length(PeakAt), Padetis = PeakAt)
pander(t(tbl_virsunes), caption = "Komponento auksščiausios viršūnės padėtis")

kNames    <- loadings$kNames
}
\seealso{
More information at \code{\link[hyperSpec]{decomposition}}
}

